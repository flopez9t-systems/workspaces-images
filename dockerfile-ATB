ARG BASE_TAG="develop"
ARG BASE_IMAGE="core-ubuntu-jammy"
FROM kasmweb/$BASE_IMAGE:$BASE_TAG
USER root

ENV HOME /home/kasm-default-profile
ENV STARTUPDIR /dockerstartup
WORKDIR $HOME

######### Customize Container Here ###########
# Envrionment config
ENV DEBIAN_FRONTEND=noninteractive \
    SKIP_CLEAN=true \
    KASM_RX_HOME=$STARTUPDIR/kasmrx \
    DONT_PROMPT_WSL_INSTALL="No_Prompt_please" \
    INST_DIR=$STARTUPDIR/install \
    INST_SCRIPTS="/ubuntu/install/chrome/install_chrome.sh \
                  /ubuntu/install/vs_code/install_vs_code.sh \
                  /ubuntu/install/dbeaver/install_dbeaver.sh \
                  /ubuntu/install/eclipse/install_eclipse.sh \
                  /ubuntu/install/smartgit/install_smartgit.sh"
# Envrionment config

RUN apt update
RUN apt-get update
RUN apt-get install -y \ca-certificates \curl
RUN apt-get install --no-install-recommends --yes openssl
RUN apt-get install -y libaio1
RUN apt-get install -y apt-transport-https
RUN apt-get install -y sudo
RUN yes | apt-get install gdebi
RUN apt install unzip
RUN apt install zip
RUN apt-get install tar
RUN apt-get install git
RUN apt-get install iputils-ping -y
RUN yes | apt install python2
RUN yes | apt-get install git-cola

# Node Ini
ARG NODE_VERSION=14.21.3
ARG NODE_PACKAGE=node-v$NODE_VERSION-linux-x64
ARG NODE_HOME=/opt/$NODE_PACKAGE
ENV NODE_PATH $NODE_HOME/lib/node_modules
ENV PATH $NODE_HOME/bin:$PATH
RUN curl https://nodejs.org/dist/v$NODE_VERSION/$NODE_PACKAGE.tar.gz | tar -xzC /opt/
RUN npm install -g typescript
# Node End

# Descarga ficheros
# RUN curl -L https://github.com/flopez9t-systems/workspaces-images/archive/main.zip --output /tmp/main.zip
RUN wget -q -O main.zip "https://github.com/flopez9t-systems/workspaces-images/archive/main.zip"
RUN unzip ./main.zip -d /tmp
RUN rm ./main.zip
# Descarga ficheros

RUN mkdir -p /dockerstartup/install/ubuntu
# Copy install scripts
RUN cp -r /tmp/workspaces-images-main/src/ubuntu $INST_DIR

# Run installations
RUN \
  for SCRIPT in $INST_SCRIPTS; do \
    bash ${INST_DIR}${SCRIPT} || exit 1; \
  done && \
  $STARTUPDIR/set_user_permission.sh $HOME && \
  rm -f /etc/X11/xinit/Xclients && \
  chown 1000:0 $HOME && \
  mkdir -p /home/kasm-user && \
  chown -R 1000:0 /home/kasm-user && \
  rm -Rf ${INST_DIR}
# Run installations

RUN rm -R  /tmp/workspaces-images-main

# Install sublime
RUN  wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add - \
    && echo "deb https://download.sublimetext.com/ apt/stable/" |  tee /etc/apt/sources.list.d/sublime-text.list \
    && apt-get update \
    && apt-get install sublime-text \
    && cp /usr/share/applications/sublime_text.desktop $HOME/Desktop/ \
    && chmod +x $HOME/Desktop/sublime_text.desktop \
    && chown 1000:1000 $HOME/Desktop/sublime_text.desktop
# Install sublime

USER kasm-user
# install VS Code extensions
# RUN chmod 777 -R $HOME/.vscode/extensions/
RUN code --force --install-extension Gruntfuggly.activitusbar \
                 --force --install-extension usernamehw.errorlens \
                 --force --install-extension eamodio.gitlens \
                 --force --install-extension mhutchie.git-graph \
                 --force --install-extension donjayamanne.githistory \
                 --force --install-extension aaron-bond.better-comments \
                 --force --install-extension esbenp.prettier-vscode \
                 --force --install-extension usernamehw.remove-empty-lines \
                 --force --install-extension spywhere.guides \
                 --force --install-extension oderwat.indent-rainbow \
                 --force --install-extension yzhang.markdown-all-in-one \
                 --force --install-extension dbaeumer.vscode-eslint \
                 --force --install-extension RapidAPI.vscode-rapidapi-client \
                 --force --install-extension RapidAPI.vscode-services \
                 --force --install-extension MS-CEINTL.vscode-language-pack-es \
                 --force --install-extension vscode-icons-team.vscode-icons \
                 --force --install-extension ms-vscode-remote.remote-containers \
                 --force --install-extension ms-azuretools.vscode-docker \
                 --force --install-extension ms-vscode-remote.remote-wsl \
                 --force --install-extension igni24.autobarrelmanager \
                 --force --install-extension formulahendry.auto-rename-tag \
                 --force --install-extension SimonSiefke.svg-preview \
                 --force --install-extension ms-vscode.js-debug-nightly \
                 --force --install-extension mgmcdermott.vscode-language-babel \
                 --force --install-extension xabikos.JavaScriptSnippets \
                 --force --install-extension p42ai.refactor \
                 --force --install-extension woodreamz.es7-react-js-snippets \
                 --force --install-extension planbcoding.vscode-react-refactor \
                 --force --install-extension msjsdiag.vscode-react-native
# install VS Code extensions
USER root

# install OpenJdk 8u372-b07
# https://devopspilot.com/content/docker/tutorials/Dockerfile/02-create-a-dokerfile-for-installing-openjdk15.html
# https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html
# https://www.openlogic.com/openjdk-downloads?field_java_parent_version_target_id=416&field_operating_system_target_id=426&field_architecture_target_id=391&field_java_package_target_id=396
RUN curl https://builds.openlogic.com/downloadJDK/openlogic-openjdk/8u372-b07/openlogic-openjdk-8u372-b07-linux-x64.tar.gz | tar -xzC /opt
ENV JAVA_HOME '/opt/openlogic-openjdk-8u372-b07-linux-x64'
ENV PATH "$JAVA_HOME/bin:$PATH"
# install OpenJdk 8u372-b07

# install Apache maven
# https://maven.apache.org/install.html
# https://phoenixnap.com/kb/install-maven-on-ubuntu
# https://www.digitalocean.com/community/tutorials/install-maven-linux-ubuntu
RUN wget -q -O /tmp/maven.tar.gz "https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz"
RUN tar -xzf /tmp/maven.tar.gz -C /opt
ENV M2_HOME=/opt/apache-maven-3.9.6
ENV MAVEN_HOME=/opt/apache-maven-3.9.6
ENV PATH=${M2_HOME}/bin:${PATH}
RUN rm -R /tmp/maven.tar.gz
# install Apache maven

# instalar lombok
RUN mkdir -p /opt/lombok
RUN curl -L https://projectlombok.org/downloads/lombok.jar --output /opt/lombok/lombok.jar
RUN echo "-javaagent:/opt/lombok/lombok.jar\n" >> /opt/eclipse/eclipse.ini
# instalar lombok

# instalar plugin eclipse marketplace
#https://marketplace.eclipse.org/marketplace-client-intro?mpc_install=5578792 https://marketplace.eclipse.org/node/5578792/api/p <ius> <updateurl>
#./eclipse -nosplash -application org.eclipse.equinox.p2.director -repository https://download.eclipse.org/tools/cdt/releases/11.5 -installIU org.eclipse.cdt.feature.group -list
#https://marketplace.eclipse.org/node/1794107/api/p
RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://cdn.spring.io/spring-tools/release/TOOLS/sts4/update/e4.31/ -installIU org.springframework.boot.ide.main.feature.feature.group
RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://cdn.spring.io/spring-tools/release/TOOLS/sts4/update/e4.31/ -installIU org.springframework.tooling.boot.ls.feature.feature.group
RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://cdn.spring.io/spring-tools/release/TOOLS/sts4/update/e4.31/ -installIU org.springframework.ide.eclipse.boot.dash.feature.feature.group
#https://marketplace.eclipse.org/node/9295/api/p
#RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://download.eclipse.org/statet/releases/4.9/E202312/ -installIU org.eclipse.statet.r.feature.group
#RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://download.eclipse.org/statet/releases/4.9/E202312/ -installIU org.eclipse.statet.redocs.tex.r.feature.group
#RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://download.eclipse.org/statet/releases/4.9/E202312/ -installIU org.eclipse.statet.redocs.wikitext.r.feature.group
#RUN /opt/eclipse/eclipse -application org.eclipse.equinox.p2.director -noSplash -repository https://download.eclipse.org/statet/releases/4.9/E202312/ -installIU org.eclipse.statet.eutils.autorun.feature.group
#https://marketplace.eclipse.org/node/2844337/api/p
RUN /opt/eclipse/eclipse -clean -purgeHistory -application org.eclipse.equinox.p2.director -noSplash -repository https://mapstruct.org/eclipse/ -installIU org.mapstruct.eclipse.feature.feature.group -list
#https://marketplace.eclipse.org/node/2755329/api/p
RUN /opt/eclipse/eclipse -clean -purgeHistory -application org.eclipse.equinox.p2.director -noSplash -repository https://pmd.github.io/pmd-eclipse-plugin-p2-site/ -installIU net.sourceforge.pmd.eclipse.feature.group -list
# instalar plugin eclipse marketplace

# Eclipse cambiar ruta perfil por defecto
#RUN sed -i 's@osgi.instance.area.default=.*@osgi.instance.area.default=/share/eclipse-workspace@' /opt/eclipse/configuration/config.ini
#RUN sed -i 's@Dosgi.instance.area.default=.*@Dosgi.instance.area.default=/share/eclipse-workspace@' /opt/eclipse/eclipse.ini
# Eclipse cambiar ruta perfil por defecto

######### End Customizations ###########

# Userspace Runtime
ENV HOME /home/kasm-user
WORKDIR $HOME
USER 1000

CMD ["--tail-log"]
